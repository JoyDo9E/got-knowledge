1.设置png等格式的图片作为元素背景时， 注意一下，如果设置为：
        background: url("...") no-repeat center / cover(contain)
    那么该图片会被等比例的放大缩小，且其宽高比极可能于元素宽高比不符，会出现图片边缘被覆盖，宽、高只能满足其一的情况；解决方式为：放大图片，变center为top/bottom;
2.cross-env: 运行跨平台设置和使用环境变量的脚本; 详细见 https://www.npmjs.com/package/cross-env
3.可以用以下的方式，将build的文件以托管静态文件的方式，在浏览器中渲染出来，以检测是否存在build问题
    yarn global add serve
    serve -s dist（build后的文件夹）
4.洗牌算法：
    （1）.高纳德算法，满足每张牌出现在每个位置的概率相同即可； 5张牌5个位置，第一张：1/5；第二张：4/5*（1/4）
    （2）.模拟从牌堆里面随机（*）不放回的取牌即可实现（malloc） 随机产生index，该位置无牌则顺位后移（前移）取牌，牌组长度不变；产生的index随机数随牌组的长度变化而变化，每取一张牌，牌组长度-1
5.git相关：
    上传本地创建项目：
        git remote add origin <仓库地址>
        git push -u origin master
6.链式递加函数：
    满足：
        add(1); // 1
        add(1)(2)(3)(4); // 10
        var addTwo = add(2);
        addTwo; // 2
        addTwo + 5; // 7
    函数为：
        var add = function(n) {
          const f = x => add(n + x)
          f.valueOf = () => n
          return f;
        }
7.页面上元素的曲线运动，只是给了该元素一个随机的x方向和y方向的速度，同时使其下落速度逐渐增大（模拟重力下坠），从而形成了曲线的抛物运动；
8.DNS：域名系统（Domain Name System缩写DNS，Domain Name被译为域名）是因特网的一项核心服务，它作为可以将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。DNS本地缓存则为host文件，远端DNS服务器则为分布式服务器。
9.PAC模式（proxy auto config）根据请求地址动态的设置代理地址  pac文件编辑方式：https://www.cnblogs.com/milton/p/6263596.html && http://findproxyforurl.com/pac-functions/
10.网络协议示意图：https://upload-images.jianshu.io/upload_images/11362584-157a39882f263361.png?imageMogr2/auto-orient/strip|imageView2/2/w/612/format/webp
11.https协议的工作流程：https://www.cnblogs.com/anyehome/p/8858456.html
12.for...in和for...of的区别（可迭代类数组对象，且自动不遍历非自身属性，除原型属性，继承属性之外的属性）：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of
    for...in遍历的是类数组对象/对象的key值；而for...of遍历的是value
13.通过修改react-scripts来自定义create-react-app的模板; // https://www.sheng00.com/2728.html
14.css模块化：
    {
        test: /^.(sass|less|css|scss)$/,
        use: [
            'style-loader',
            {
                loader: 'css-loader',
                options: {
                    modules: true
                }
            },
            ['sass-loader', 'less-loader']
        ]
    }
15.所有的计算都可随数字的大小变化而变化，如8位二进制数无法表示，超过八位，表示为16位二进制数，1byte递增；
    计算机不做减法 只做加法
    原码：数的二进制（正数不变，负数的第一位为符号为1，如：-8， 10001000）；反码：正数不变；负数符号位不变，其他位按位取反；补码：正数不变；负数在反码的基础上加1
    如： -300 - 400
        -300，原：1000000100101100；反：1111111011010011；补：1111111011010100
        -400，原：1000000110010000；反：1111111001101111；补：1111111001110000
        结果：11111110101000100（17位，多余16位，去除第一位，1111110101000100）
16.antd骨架加载样式:
    animation: ant-skeleton-loading 1.4s ease infinite;
    background: linear-gradient(90deg, #f2f2f2 25%, #e6e6e6 37%, #f2f2f2 63%);
    background-size: 400% 100%;
    @keyframes ant-skeleton-loading{
        0% {
                background-position: 100% 50%;
            }
        100% {
            background-position: 0 50%;
        }
    }
