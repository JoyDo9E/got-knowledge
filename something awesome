1.使用js生成器yeild将异步promise变为同步（递归）：
    function himmel(gen) {
      const item = gen.next()
      if (item.done) {
        return item.value
      }

      const { value, done } = item
      if (value instanceof Promise) {
        value.then((e) => himmel(gen))
      } else {
        himmel(gen)
      }
    }
2.链式递加函数：
      满足：
          add(1); // 1
          add(1)(2)(3)(4); // 10
          var addTwo = add(2);
          addTwo; // 2
          addTwo + 5; // 7
      函数为：
          var add = function(n) {
            const f = x => add(n + x)
            f.valueOf = () => n
            return f;
          }
3.MutationObserver接口提供了监视对DOM树所做更改的能力。（可以通过次api实现监听某一dom元素变化的目的） # https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver
// todo gitlab ssh
4.gitlab添加ssh公钥之后，需要执行以下命令行，以保存操作密码：

    eval `ssh-agent -s`
    ssh-add
详见：https://stackoverflow.com/questions/17846529/could-not-open-a-connection-to-your-authentication-agent；

5.N只老鼠的生死有2^N种状态，2^10 =  1024 > 1000 ，所以是否10只老鼠就可以了？
  因为每只老鼠有生死2中状态,利用2进制，10只老鼠可以有2^10=1024中状态，可

  以判断出1000瓶水中有毒的那瓶。将问题域缩小来分析,例如：有7瓶水,其中1瓶有毒，小白鼠只要尝一点带毒

  的水24小时后就会死亡，由上可知2^3=8 > 7所以3只就够了.

  下面将7瓶水以2进制编号：

  001 第一瓶,010 第二瓶,011 第三瓶,100 第四瓶,101 第五瓶,110 第六瓶,111 第七瓶

  将3位2进制数第一位为1的瓶子中取出1滴放在一起分给老鼠A，即4，5，6，7瓶

  将3位2进制数第二位为1的瓶子中取出1滴放在一起分给老鼠B，即2，3，6，7瓶

  将3位2进制数最后三位二进制为1的瓶子中取出1滴放在一起分给老鼠C，即1，3，5，7瓶

  然后等24小时,按ABC顺序给死了的老鼠标号为1，没死的为0这个2进制的十进制数就是有毒的瓶子标号

  例如第三瓶有毒:则BC老鼠会死，为011=3

  第一次看到这个方法感觉很神奇...在网上找了下,这种思想有个算法叫Bloom Filter算法.
